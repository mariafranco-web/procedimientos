CREATE PROCEDURE `amrl-data-prd`.MONITORING.SP_TBL_DETALLE_LINAJE_ESQUEMAS()
BEGIN


CREATE OR REPLACE TABLE `amrl-data-prd.MONITORING.TBL_DETALLE_LINAJE_ESQUEMAS`
AS
WITH tablas_directas AS
(
SELECT
TLT.BK_DETALLE_TABLA,
TLT.BK_RUTINA,
ARRAY_AGG (DISTINCT TLT.TABLA_NORMALIZADA) AS TABLAS_DIRECTAS
FROM `MONITORING.TBL_LINAJE_TABLAS`  AS TLT
GROUP BY TLT.BK_DETALLE_TABLA,
TLT.BK_RUTINA
)

SELECT
SHA256 ( CONCAT (tables.table_schema, tables.table_name)) AS SK_DETALLE_TABLA,
TO_HEX (SHA256 ( CONCAT (tables.table_schema, tables.table_name))) AS SK_DETALLE_TABLA_STRING,
tables.table_catalog AS PROYECTO,
tables.table_schema AS DATASET,
tables.table_name AS TABLA,
TDR.RUTINA,
TLF.TABLA_NORMALIZADA AS TABLA_RAW,
TCT.CRITICIDAD,
TCT.MODO_CARGA,

TMT_RAW.FECHA_ULTIMA_MODIFICACION AS FECHA_ULTIMA_MODIFICACION_RAW,
TMT_RAW.ACTUALIZADA AS ACTUALIZADA_RAW,
TMT_RAW.ORIGEN AS ORIGEN_RAW,
TMT_RAW.MODULO AS MODULO_RAW,
TMT_RAW.SUBMODULO AS SUBMODULO_RAW,
FROM  `amrl-data-prd`.`region-us`.INFORMATION_SCHEMA.TABLES AS tables


LEFT JOIN `MONITORING.TBL_DETALLE_RUTINAS` AS TDR ON SHA256 (CONCAT (tables.table_schema, tables.table_name)) = TDR.SK_DETALLE_TABLA
LEFT JOIN tablas_directas AS td ON TDR.SK_DETALLE_TABLA = td.BK_DETALLE_TABLA
LEFT JOIN `MONITORING.TBL_LINAJE_FINAL` AS TLF ON TLF.BK_RUTINA = td.BK_RUTINA
LEFT JOIN `MONITORING.TBL_MONITOREO_TABLAS` AS TMT_RAW ON TMT_RAW.SK_DETALLE_TABLA =TLF.BK_DETALLE_TABLA_RAW
LEFT JOIN `MONITORING.TBL_CRITICIDAD_TABLAS_RAW` TCT ON TCT.SK_DETALLE_TABLA = TLF.BK_DETALLE_TABLA_RAW


WHERE 
tables.table_type = 'BASE TABLE';
END;