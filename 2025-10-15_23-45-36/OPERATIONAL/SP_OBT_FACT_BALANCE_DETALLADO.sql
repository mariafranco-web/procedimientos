CREATE PROCEDURE `amrl-data-prd`.OPERATIONAL.SP_OBT_FACT_BALANCE_DETALLADO()
BEGIN
CREATE OR REPLACE TABLE amrl-data-prd.CONSUMPTION.OBT_FACT_BALANCE_DETALLADO PARTITION BY
   FH_APERTURA_PER CLUSTER BY NIVEL_2,NIVEL_6,CUENTA, NOMBRE_TERCERO AS
/**************************** Consolida la informacion agrupada por segmento y tercero de un periodo especifico, esta operacion crea la tabla de consumo OBT_FACT_BALANCE_DETALLADO  ***************************/
WITH SABANA_DATOS AS (
SELECT 
		MDT.*	  
FROM 
		amrl-data-prd.PRESENTATION.FACT_MOVIMIENTO_DETALLADO MDT 
	WHERE 1=1
		AND  (IFNULL (MDT.DEBITO,0) !=0
		OR	MDT.CREDITO !=0 )
		AND MDT.FH_CONTABLE >= CASE WHEN MDT.CUENTA BETWEEN '4000000000' AND '6999999999' THEN  PARSE_DATE('%Y-%m-%d', CAST(MDT.PERIODPERIODYEAR AS STRING) || '-01-01') ELSE DATE_TRUNC(CURRENT_DATE(), YEAR) END 
		AND  MDT.FH_APERTURA_PER>=DATE_TRUNC(CURRENT_DATE(), YEAR)
		AND MDT.PERIODENDDATE <=  DATE_TRUNC(CURRENT_DATE(), MONTH) + INTERVAL 1 MONTH - INTERVAL 1 DAY  
		AND MDT.FH_CONTABLE >=DATE_TRUNC(CURRENT_DATE(), YEAR)
	
		),
		 CONSULTA AS (
 
SELECT 
	SBD.COMPANIA,
	SBD.NOMBRE_COMPANIA,
	SBD.NIVEL_1,
	SBD.NOMBRE_NVL1,
	SBD.NIVEL_2,
	SBD.NOMBRE_NVL2,
	SBD.NIVEL_3,
	SBD.NOMBRE_NVL3,
	SBD.NIVEL_4,
	SBD.NOMBRE_NVL4,
	SBD.NIVEL_5,
	SBD.NOMBRE_NVL5,
	SBD.NIVEL_6,
	SBD.NOMBRE_NVL6,
	SBD.NIVEL_7,
	SBD.NOMBRE_NVL7,
	SBD.NIVEL_8,
	SBD.NOMBRE_NVL8,
	SBD.NIVEL_9,
	SBD.NOMBRE_NVL9,
	SBD.NIVEL_10,
	SBD.NOMBRE_NVL10,
	SBD.CUENTA,
	SBD.NOMBRE_CUENTA,
	SBD.GRUPO,
	SBD.NOMBRE_GRUPO,
	SBD.CONSOLIDADOR,
	SBD.DES_CONSOLIDADOR,
	SBD.PROYECTO,
	SBD.NOMBRE_PROYECTO,
	SBD.AREA,
	SBD.NOMBRE_AREA,
	SBD.FUTURO,
	SBD.NOMBRE_FUTURO,
	SBD.LIBRO,
	SBD.NIT,
	SBD.NOMBRE_TERCERO,
	SBD.NIT_CABECERA,
	SBD.TERCERO_CABECERA,
	PER.BK_PERIODO,
	PER.PERIODSTARTDATE FH_APERTURA_PER,
ROUND(SUM(CASE 
        WHEN PER.PERIODSTARTDATE > SBD.FH_APERTURA_PER 
        THEN SBD.ACTIVIDAD_PERIODO 
        ELSE 0 
      END),2) AS SALDO_INC,

  ROUND(SUM(CASE 
        WHEN PER.PERIODSTARTDATE = SBD.FH_APERTURA_PER  
        THEN SBD.DEBITO 
        ELSE 0 
      END),2) AS DEBITO,
			 ROUND(SUM(CASE 
        WHEN PER.PERIODSTARTDATE = SBD.FH_APERTURA_PER  
        THEN SBD.CREDITO 
        ELSE 0 
      END),2) AS CREDITO,

  ROUND(SUM(CASE 
        WHEN PER.PERIODSTARTDATE = SBD.FH_APERTURA_PER  
        THEN SBD.ACTIVIDAD_PERIODO 
        ELSE 0 
      END),2) AS ACTIVIDAD_PERIODO,

  ROUND(SUM(CASE 
        WHEN PER.PERIODSTARTDATE >= SBD.FH_APERTURA_PER   
        THEN SBD.ACTIVIDAD_PERIODO 
        ELSE 0 
      END),2) AS SALDO_FN

 FROM SABANA_DATOS SBD,
			amrl-data-prd.PRESENTATION.DIM_PERIODOS PER
			
WHERE 
	 SBD.FH_APERTURA_PER >= CASE WHEN SBD.CUENTA BETWEEN '4000000000' AND '6999999999' THEN  PARSE_DATE('%Y-%m-%d', CAST(PER.PERIODPERIODYEAR AS STRING) || '-01-01') ELSE DATE_TRUNC(CURRENT_DATE(), YEAR) END 
		AND  PER.PERIODSTARTDATE>=DATE_TRUNC(CURRENT_DATE(), YEAR)
		AND PER.PERIODENDDATE <=DATE_TRUNC(CURRENT_DATE(), MONTH) + INTERVAL 1 MONTH - INTERVAL 1 DAY 
		AND SBD.FH_APERTURA_PER <= PER.PERIODSTARTDATE


 
GROUP BY
		SBD.COMPANIA,
		SBD.NOMBRE_COMPANIA,
		SBD.NIVEL_1,
		SBD.NOMBRE_NVL1,
		SBD.NIVEL_2,
		SBD.NOMBRE_NVL2,
		SBD.NIVEL_3,
		SBD.NOMBRE_NVL3,
		SBD.NIVEL_4,
		SBD.NOMBRE_NVL4,
		SBD.NIVEL_5,
		SBD.NOMBRE_NVL5,
		SBD.NIVEL_6,
		SBD.NOMBRE_NVL6,
		SBD.NIVEL_7,
		SBD.NOMBRE_NVL7,
		SBD.NIVEL_8,
		SBD.NOMBRE_NVL8,
		SBD.NIVEL_9,
		SBD.NOMBRE_NVL9,
		SBD.NIVEL_10,
		SBD.NOMBRE_NVL10,
		SBD.CUENTA,
		SBD.NOMBRE_CUENTA,
		SBD.GRUPO,
		SBD.NOMBRE_GRUPO,
		SBD.CONSOLIDADOR,
		SBD.DES_CONSOLIDADOR,
		SBD.PROYECTO,
		SBD.NOMBRE_PROYECTO,
		SBD.AREA,
		SBD.NOMBRE_AREA,
		SBD.FUTURO,
		SBD.NOMBRE_FUTURO,
		SBD.LIBRO,
		SBD.NIT,
		SBD.NOMBRE_TERCERO,
		SBD.NIT_CABECERA,
	  SBD.TERCERO_CABECERA,
		PER.BK_PERIODO,
		PER.PERIODSTARTDATE
		UNION ALL
SELECT  
 	COMPANIA,
	NOMBRE_COMPANIA,
	NIVEL_1,
	NOMBRE_NVL1,
	NIVEL_2,
	NOMBRE_NVL2,
	NIVEL_3,
	NOMBRE_NVL3,
	NIVEL_4,
	NOMBRE_NVL4,
	NIVEL_5,
	NOMBRE_NVL5,
	NIVEL_6,
	NOMBRE_NVL6,
	NIVEL_7,
	NOMBRE_NVL7,
	NIVEL_8,
	NOMBRE_NVL8,
	NIVEL_9,
	NOMBRE_NVL9,
	NIVEL_10,
	NOMBRE_NVL10,
  CUENTA,
  NOMBRE_CUENTA,
  GRUPO,
  NOMBRE_GRUPO,
  CONSOLIDADOR,
  DES_CONSOLIDADOR,
  PROYECTO,
  NOMBRE_PROYECTO,
  AREA,
  NOMBRE_AREA,
  FUTURO,
  NOMBRE_FUTURO,
  LIBRO,
  NIT,
  NOMBRE_TERCERO,
	NIT_CABECERA,
	TERCERO_CABECERA,
  BK_PERIODO,
  FH_APERTURA_PER,
  SALDO_INC ,
  DEBITO ,
  CREDITO ,
  ACTIVIDAD_PERIODO ,
  SALDO_FN 


FROM 

amrl-data-prd.PRESENTATION.FACT_BALANCE_DETALLADO_HISTORICO

)

SELECT 
  CON.COMPANIA,
  CON.NOMBRE_COMPANIA,
  CON.NIVEL_1,
  CON.NOMBRE_NVL1,
  CON.NIVEL_2,
  CON.NOMBRE_NVL2,
  CON.NIVEL_3,
  CON.NOMBRE_NVL3,
  CON.NIVEL_4,
  CON.NOMBRE_NVL4,
  CON.NIVEL_5,
  CON.NOMBRE_NVL5,
  CON.NIVEL_6,
  CON.NOMBRE_NVL6,
  CON.NIVEL_7,
  CON.NOMBRE_NVL7,
  CON.NIVEL_8,
  CON.NOMBRE_NVL8,
  CON.NIVEL_9,
  CON.NOMBRE_NVL9,
  CON.NIVEL_10,
  CON.NOMBRE_NVL10,
  CON.CUENTA,
  CON.NOMBRE_CUENTA,
  CON.GRUPO,
  CON.NOMBRE_GRUPO,
  CON.CONSOLIDADOR COD_CONSOLIDADOR,
  CON.DES_CONSOLIDADOR DESCRIPCION_CONSOLIDADOR,
  CON.PROYECTO,
  CON.NOMBRE_PROYECTO,
  CON.AREA,
  CON.NOMBRE_AREA,
  CON.FUTURO,
  CON.NOMBRE_FUTURO,
  CON.LIBRO,
  CON.NIT,
  MAX(CON.NOMBRE_TERCERO) NOMBRE_TERCERO,
  CON.NIT_CABECERA,
  MAX(CON.TERCERO_CABECERA)TERCERO_CABECERA,
  CON.BK_PERIODO PERIODO,
  CON.FH_APERTURA_PER,
  ROUND(SUM(CON.SALDO_INC),2) SALDO_INICIAL,
  ROUND(SUM(CON.DEBITO),2) DEBITO,
  ROUND(SUM(CON.CREDITO),2) CREDITO,
  ROUND(SUM(CON.ACTIVIDAD_PERIODO),2) ACTIVIDAD_PERIODO,
  ROUND(SUM(CON.SALDO_FN),2) SALDO_FINAL

FROM CONSULTA CON

GROUP BY
 CON.COMPANIA,
  CON.NOMBRE_COMPANIA,
  CON.NIVEL_1,
  CON.NOMBRE_NVL1,
  CON.NIVEL_2,
  CON.NOMBRE_NVL2,
  CON.NIVEL_3,
  CON.NOMBRE_NVL3,
  CON.NIVEL_4,
  CON.NOMBRE_NVL4,
  CON.NIVEL_5,
  CON.NOMBRE_NVL5,
  CON.NIVEL_6,
  CON.NOMBRE_NVL6,
  CON.NIVEL_7,
  CON.NOMBRE_NVL7,
  CON.NIVEL_8,
  CON.NOMBRE_NVL8,
  CON.NIVEL_9,
  CON.NOMBRE_NVL9,
  CON.NIVEL_10,
  CON.NOMBRE_NVL10,
  CON.CUENTA,
  CON.NOMBRE_CUENTA,
  CON.GRUPO,
  CON.NOMBRE_GRUPO,
  CON.CONSOLIDADOR,
  CON.DES_CONSOLIDADOR,
  CON.PROYECTO,
  CON.NOMBRE_PROYECTO,
  CON.AREA,
  CON.NOMBRE_AREA,
  CON.FUTURO,
  CON.NOMBRE_FUTURO,
  CON.LIBRO,
  CON.NIT,
 -- CON2.NOMBRE_TERCERO,
  CON.NIT_CABECERA,
  --CON3.TERCERO_CABECERA,
  CON.BK_PERIODO,
  CON.FH_APERTURA_PER
 HAVING
	(ROUND(SUM(CON.SALDO_INC),2) !=0
  OR ROUND(SUM(CON.DEBITO),2) !=0
  OR ROUND(SUM(CON.CREDITO),2) !=0
  OR ROUND(SUM(CON.ACTIVIDAD_PERIODO),2) !=0
  OR ROUND(SUM(CON.SALDO_FN),2) !=0);
END;