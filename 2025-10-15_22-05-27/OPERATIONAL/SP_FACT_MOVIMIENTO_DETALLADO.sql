CREATE PROCEDURE `amrl-data-prd`.OPERATIONAL.SP_FACT_MOVIMIENTO_DETALLADO()
OPTIONS(
  description=" Informacion del balance detallado por segmento y tercero, muestra la informacion agrupada por tercero por periodo contable, esta consulta crea en la capa de consumo el movimiento detallado")
BEGIN
	CREATE OR REPLACE TABLE amrl-data-prd.PRESENTATION.FACT_MOVIMIENTO_DETALLADO PARTITION BY
   FH_APERTURA_PER CLUSTER BY PERIODO,NOMBRE_TERCERO, NIVEL_4, PROYECTO AS 
	 /**************************** Informacion del balance detallado por segmento y tercero, muestra la informacion de manera detallada por cada una de las lineas y distribuciones aca se consolida las tablas de hechos y dimensiones requeridas para construir la tabla de consumo de movimiento detallado ***************************/

SELECT 
		DC.COMPANIA,
		DC.NOMBRE_COMPANIA,
		DC.NV1 NIVEL_1,
		DC.NOMBRE_NVL1,
		DC.NV2 NIVEL_2,
		DC.NOMBRE_NVL2,
		DC.NV3 NIVEL_3,
		DC.NOMBRE_NVL3,
		DC.NV4 NIVEL_4,
		DC.NOMBRE_NVL4,
		DC.NV5 NIVEL_5,
		DC.NOMBRE_NVL5,
		DC.NV6 NIVEL_6,
		DC.NOMBRE_NVL6,
		DC.NV7 NIVEL_7,
		DC.NOMBRE_NVL7,
		DC.NV8 NIVEL_8,
		DC.NOMBRE_NVL8,
		DC.NV9 NIVEL_9,
		DC.NOMBRE_NVL9,
		DC.NV10 NIVEL_10,
		DC.NOMBRE_NVL10,
		DC.CUENTA,
		DC.NOMBRE_CUENTA,
		DC.GRUPO,
		DC.NOMBRE_GRUPO,
		DC.CONSOLIDADOR,
		DC.DES_CONSOLIDADOR,
		DC.PROYECTO,
		DC.NOMBRE_PROYECTO,
		DC.AREA,
		DC.NOMBRE_AREA,
		DC.FUTURO,
		DC.NOMBRE_FUTURO,
		DC.SK_COMBINATION_ID,
		FBG.LIBRO,
	COALESCE(FCXP.NIT,FBG.NIT,DT.NIT,FCC.NIT,(SELECT MAX(T.NIT) FROM amrl-data-prd.PRESENTATION.DIM_TERCEROS T INNER JOIN amrl-data-prd.PRESENTATION.FACT_TRANSACCIONES_COMPRAS TC  ON T.SK_TERCERO=TC.SK_TERCERO WHERE TC.ORDEN_COMPRA=FDCA.DOCUMENTO ),'S/N') NIT,
		COALESCE((SELECT MAX(T.TERCERO) FROM amrl-data-prd.PRESENTATION.DIM_TERCEROS T WHERE T.NIT=COALESCE(FCXP.NIT,FBG.NIT,FCC.NIT)),DT.TERCERO,FCC.TERCERO,(SELECT MAX(T.TERCERO) FROM amrl-data-prd.PRESENTATION.DIM_TERCEROS T INNER JOIN amrl-data-prd.PRESENTATION.FACT_TRANSACCIONES_COMPRAS TC  ON T.SK_TERCERO=TC.SK_TERCERO WHERE TC.ORDEN_COMPRA=FDCA.DOCUMENTO),'SIN TERCERO') NOMBRE_TERCERO,
		COALESCE(FBG.NIT,DT.NIT,FCC.NIT,(SELECT MAX(T.NIT) FROM amrl-data-prd.PRESENTATION.DIM_TERCEROS T INNER JOIN amrl-data-prd.PRESENTATION.FACT_TRANSACCIONES_COMPRAS TC  ON T.SK_TERCERO=TC.SK_TERCERO WHERE TC.ORDEN_COMPRA=FDCA.DOCUMENTO ),'S/N') NIT_CABECERA,
		COALESCE((SELECT MAX(T.TERCERO) FROM amrl-data-prd.PRESENTATION.DIM_TERCEROS T WHERE T.NIT=COALESCE(FBG.NIT,FCC.NIT)),DT.TERCERO,FCC.TERCERO,(SELECT MAX(T.TERCERO) FROM amrl-data-prd.PRESENTATION.DIM_TERCEROS T INNER JOIN amrl-data-prd.PRESENTATION.FACT_TRANSACCIONES_COMPRAS TC  ON T.SK_TERCERO=TC.SK_TERCERO WHERE TC.ORDEN_COMPRA=FDCA.DOCUMENTO),'SIN TERCERO') TERCERO_CABECERA,
		FBG.PERIODO,
		FBG.FH_CONTABLE,
		FDCA.DOCUMENTO,
		FDCA.TRANSACTIONENTITYCODE,
    FBG.ORIGEN,
		FBG.CATEGORIA,
		FBG.DOCUMENTO_CON,
		FBG.CONCEPTO,
		REPLACE(COALESCE(FCXP.DESCRIPCION,FCC.DESCRIPCION,FTC.DESCRIPCION,FDCA.DESCRIPCION,FBG.DESCRIPCION) ,CHR(10),' ') AS	DESCRIPCION,
		PER.PERIODPERIODYEAR,
		PER.PERIODPERIODNUM,
		PER.PERIODSTARTDATE FH_APERTURA_PER,
		PER.PERIODENDDATE,
		FBG.LINENUM NUM_LINEA,
		ROW_NUMBER() OVER () AS LINEA_TEMP,
    COALESCE(FDCA.DEBITO,FBG.DEBITO) DEBITO,
    COALESCE(FDCA.CREDITO,FBG.CREDITO)CREDITO,
    COALESCE(FDCA.PERIODO_ACT,(FBG.DEBITO-FBG.CREDITO)) ACTIVIDAD_PERIODO
	
FROM 
		amrl-data-prd.PRESENTATION.DIM_CUENTAS DC 
		INNER JOIN  amrl-data-prd.PRESENTATION.FACT_BALANCE_GRAL FBG  ON FBG.SK_COMBINATION_ID =DC.SK_COMBINATION_ID
		INNER JOIN  amrl-data-prd.PRESENTATION.DIM_PERIODOS PER ON PER.BK_PERIODO=FBG.PERIODO
		LEFT JOIN amrl-data-prd.PRESENTATION.FACT_DISTRIBUCIONES_CONTABLES_AUX FDCA ON  FDCA.SK_JEHEADERID=FBG.SK_JEHEADERID AND FDCA.JELINENUM=FBG.LINENUM 
		LEFT JOIN (
				SELECT 
						SK_DISTORIGEN,
						ORIGEN,
						NIT,
						SK_TERCERO, 
						SK_INVOICEID,
						DESCRIPCION,
						ARRAY_AGG(B ORDER BY FH_FACTURA DESC LIMIT 1)[SAFE_OFFSET(0)] AS B
				FROM amrl-data-prd.PRESENTATION.FACT_CUENTAS_A_PAGAR   B
				GROUP BY SK_DISTORIGEN,ORIGEN,SK_TERCERO,SK_INVOICEID,NIT,DESCRIPCION
		) FCXP ON FDCA.SK_SOURCEDISTRIBUTIONIDNUM1=FCXP.SK_DISTORIGEN AND FDCA.SK_SOURCEIDINT1=FCXP.SK_INVOICEID 
		LEFT JOIN (
				SELECT 
						SK_CHECKID,
						ORIGEN,
						SK_TERCERO, 
						ARRAY_AGG(B ORDER BY FECHA_PAGO DESC LIMIT 1)[SAFE_OFFSET(0)] AS B
				FROM amrl-data-prd.PRESENTATION.FACT_CUENTAS_A_PAGAR_PAGOS  B
				GROUP BY SK_CHECKID,ORIGEN,SK_TERCERO
		) FCXPP ON  FCXPP.SK_CHECKID=FDCA.SK_SOURCEIDINT1 AND FDCA.TRANSACTIONENTITYCODE=FCXPP.ORIGEN 
		LEFT JOIN (
				SELECT 
						SK_POHEADERID,
						APPLICATIONID,
						SK_TERCERO,
						DESCRIPCION,
						ARRAY_AGG(B ORDER BY FH_ORDEN DESC LIMIT 1)[SAFE_OFFSET(0)] AS B
				FROM amrl-data-prd.PRESENTATION.FACT_TRANSACCIONES_COMPRAS B
				GROUP BY SK_POHEADERID, APPLICATIONID,SK_TERCERO,DESCRIPCION
		) FTC ON FTC.SK_POHEADERID = FDCA.SK_SOURCEIDINT1 AND FTC.APPLICATIONID = FDCA.APPLICATIONID
		LEFT JOIN (
				SELECT 
						SK_IDORIGEN,
						ORIGEN,
						NIT,
						TERCERO,
						SK_TERCERO,
						DESCRIPCION,
						ARRAY_AGG(B ORDER BY FH_COBRO DESC LIMIT 1)[SAFE_OFFSET(0)] AS B
				FROM amrl-data-prd.PRESENTATION.FACT_CUENTAS_A_COBRAR B
				GROUP BY SK_IDORIGEN, ORIGEN,SK_TERCERO,NIT,TERCERO,DESCRIPCION
		) FCC ON FCC.SK_IDORIGEN = FDCA.SK_SOURCEIDINT1 AND FDCA.TRANSACTIONENTITYCODE = FCC.ORIGEN 

		LEFT JOIN (
				SELECT 
						SK_IDORIGEN,
						ORIGEN,
						SK_TERCERO,
						ARRAY_AGG(B ORDER BY FH_TRANSACCION DESC LIMIT 1)[SAFE_OFFSET(0)] AS B
				FROM amrl-data-prd.PRESENTATION.FACT_TRANSACCIONES_CUENTAS_A_COBRAR B
				GROUP BY SK_IDORIGEN, ORIGEN,SK_TERCERO
		) FTCC ON FTCC.SK_IDORIGEN = FDCA.SK_SOURCEIDINT1 AND FDCA.TRANSACTIONENTITYCODE = FTCC.ORIGEN 

		LEFT JOIN (
				SELECT 
						SK_IDORIGEN,
						ORIGEN,
						SK_TERCERO,
						ARRAY_AGG(B ORDER BY SK_IDORIGEN DESC LIMIT 1)[SAFE_OFFSET(0)] AS B
				FROM amrl-data-prd.PRESENTATION.FACT_GESTION_DE_EFECTIVO B
				GROUP BY SK_IDORIGEN, ORIGEN,SK_TERCERO
		) FGEF ON FGEF.SK_IDORIGEN = FDCA.SK_SOURCEIDINT1 AND FDCA.TRANSACTIONENTITYCODE = FGEF.ORIGEN 

		LEFT JOIN (
				SELECT 
						SK_IDORIGEN,
						APPLICATIONID,
						SK_TERCERO,
						ARRAY_AGG(B ORDER BY SK_IDORIGEN DESC LIMIT 1)[SAFE_OFFSET(0)] AS B
				FROM amrl-data-prd.PRESENTATION.FACT_TRANSACCIONES_COMPRAS_RECEPCIONES B
				GROUP BY SK_IDORIGEN, APPLICATIONID,SK_TERCERO
		) FTCR ON FTCR.SK_IDORIGEN = FDCA.SK_SOURCEIDINT1 AND FTCR.APPLICATIONID = FDCA.APPLICATIONID
		LEFT JOIN amrl-data-prd.PRESENTATION.DIM_TERCEROS DT ON DT.SK_TERCERO = COALESCE(FCXP.SK_TERCERO,FCXPP.SK_TERCERO, FTC.SK_TERCERO,FTC.SK_TERCERO, FCC.SK_TERCERO, FGEF.SK_TERCERO, FTCR.SK_TERCERO,FDCA.SK_TERCERO)
 WHERE 
		(FDCA.DOCUMENTO  NOT IN (-- Se omiten los siguentes registros debido a generan diferencias en la contabilidad, no afectan los saldos reales debido a que son transacciones anuladas              
		'79522956',
		'20210712123518120103',        
		'20240801204254961845',       
		'20240228203845270435',          
		'20230518210353176970',      
		'20211118173353030142',  
		'20211012193907914521',                      
		'20200418215138118820',
		'20230801193032229661',
		'20230606145840947825',
		'20210701174855609658',
		'20210303171418933275'
		) OR FDCA.DOCUMENTO IS NULL);
END;