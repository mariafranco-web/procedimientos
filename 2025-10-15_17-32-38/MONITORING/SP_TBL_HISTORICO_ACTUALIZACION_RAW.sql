CREATE PROCEDURE `amrl-data-prd`.MONITORING.SP_TBL_HISTORICO_ACTUALIZACION_RAW()
BEGIN

/*
CREATE OR REPLACE TABLE `amrl-data-prd.MONITORING.TBL_HISTORICO_ACTUALIZACION_RAW`
(
SK_DETALLE_TABLA            BYTES,
DATASET                     STRING,
TABLA                       STRING,
FECHA                       DATE,
TOTAL_FILAS                 INT64,
FECHA_ULTIMA_MODIFICACION   TIMESTAMP
)*/

MERGE `amrl-data-prd.MONITORING.TBL_HISTORICO_ACTUALIZACION_RAW` AS TAR
USING (
  SELECT
    SHA256 ( CONCAT (tables.table_schema, tables.table_name)) AS SK_DETALLE_TABLA,
    storage.table_schema AS DATASET,
    storage.table_name AS TABLA,
    CURRENT_DATE() AS FECHA,
    storage.total_rows AS TOTAL_FILAS,
    storage.storage_last_modified_time AS FECHA_ULTIMA_MODIFICACION

  FROM`amrl-data-prd`.`region-us`.INFORMATION_SCHEMA.TABLES AS tables
  LEFT JOIN `amrl-data-prd`.`region-us`.INFORMATION_SCHEMA.TABLE_STORAGE AS storage ON tables.table_schema = storage.table_schema AND tables.table_name = storage.table_name
  WHERE tables.table_schema LIKE 'RAW%'
) S


ON TAR.SK_DETALLE_TABLA = S.SK_DETALLE_TABLA
AND TAR.FECHA = S.FECHA


WHEN MATCHED THEN
  UPDATE SET  TOTAL_FILAS = S.TOTAL_FILAS,
              FECHA_ULTIMA_MODIFICACION = S.FECHA_ULTIMA_MODIFICACION
WHEN NOT MATCHED THEN
  INSERT (SK_DETALLE_TABLA, DATASET, TABLA, FECHA, TOTAL_FILAS, FECHA_ULTIMA_MODIFICACION)
  VALUES (S.SK_DETALLE_TABLA, S.DATASET, S.TABLA, S.FECHA, S.TOTAL_FILAS, S.FECHA_ULTIMA_MODIFICACION);


END;