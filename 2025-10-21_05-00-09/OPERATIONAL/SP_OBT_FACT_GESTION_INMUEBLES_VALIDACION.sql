CREATE PROCEDURE `amrl-data-prd`.OPERATIONAL.SP_OBT_FACT_GESTION_INMUEBLES_VALIDACION()
OPTIONS(
  description="Propósito:Crear y actualizar la tabla OBT_FACT_GESTION_INMUEBLES_NEW\n en el DataSet de COMSUPTION, La tabla consolida los atributos revelantes de los items vendidos y disponibles incluye articulos de CDA. \nAutor: Maria Fernanda Franco")
BEGIN
    CREATE OR REPLACE TABLE `amrl-data-prd.CONSUMPTION.OBT_FACT_GESTION_INMUEBLES_VALIDACION` AS

WITH INVENTARIO_BASE AS
(

SELECT
SHA256(CAST(EIEB.EFF_LINE_ID AS STRING))                                              AS SK_ARTICULO_SHA,
EIEB.EFF_LINE_ID                                                                      AS SK_ARTICULO,
EIEB.ATTRIBUTE_CHAR1 				                                                          AS BK_COD_TRANSACCIONAL,
EIEB.INVENTORY_ITEM_ID  			                                                        AS BK_ARTICULO,
ESIB.ITEMBASEPEOITEMNUMBER 	                                                          AS NOMBRE_ARTICULO,
EIEB.CATEGORY_CODE 					                                                          AS CATEGORIA,
EIEB.ATTRIBUTE_CHAR5 				                                                          AS TIPO_DE_ARTICULO,
EIEB.ATTRIBUTE_CHAR3 				                                                          AS CLASE_DE_ARTICULO,
EIEB.ATTRIBUTE_CHAR4 				                                                          AS REFERENCIA,
EIEB.ATTRIBUTE_NUMBER2 			                                                          AS AREA_CONSTRUIDA,
EIEB.ATTRIBUTE_NUMBER1				                                                        AS AREA_COMUN,
ESIB.ITEMBASEPEOLISTPRICEPERUNIT                                                      AS PRECIO_DE_LISTA,					
ESIB.ITEMBASEPEOINVENTORYITEMSTATUSCODE                                               AS ESTADO_DEL_ARTICULO,
ESIB.ITEMBASEPEOCURRENTPHASECODE 				                                              AS FASE_CICLO_DE_VIDA,
EIEB.ATTRIBUTE_CHAR6										                                              AS MATRICULA_INMOBILIARIA,
COALESCE(ARRAY_TO_STRING (T2.ENCARGOS_FIDUCIARIOS_CONCATENADOS, ','),'0')	            AS ENCARGOS_FIDUCIARIOS,
LPAD(COALESCE(T2.ENCARGOS_FIDUCIARIOS_CONCATENADOS[SAFE_OFFSET(0)], '0'), 12, '0')    AS ENCARGO_FIDUCIARIO_ACTUAL,
ARRAY_LENGTH(T2.ENCARGOS_FIDUCIARIOS_CONCATENADOS)                                    AS TOTAL_ENCARGOS_ASIGNADOS,
EIEB.ATTRIBUTE_DATE1 													                                        AS FECHA_PROYECTADA_ESCRITURACION,  --campo nuevo, poblado por el equipo de escrituracion
EIEB.ATTRIBUTE_DATE2 													                                        AS FECHA_PROYECTADA_CTO,  --campo nuevo, poblado por el equipo de escrituracion 
EIEB.ATTRIBUTE_DATE3 													                                        AS FECHA_REAL_CTO, --campo nuevo, poblado por el equipo de escrituracion 
EIEB.ATTRIBUTE_DATE5														                                      AS FECHA_PROYECTADA_POLIZA_DECENAL,
EIEB.ATTRIBUTE_DATE6														                                      AS FECHA_REAL_POLIZA_DECENAL,
EIEB.ATTRIBUTE_DATE7													                                        AS HABILITADO_PARA_ENTREGA, --campo temporal mientras se libera el reporte de inmuebles cerrados y habilitados
EIEB.ATTRIBUTE_DATE4														                                      AS FECHA_ENTREGA_ESTIMADA,  --campo temporal mientras se libera el reporte de inmuebles cerrados y habilitados
CURRENT_DATETIME("America/Bogota")   		                                              AS FECHA_ACTUALIZACION_BQ,
CURRENT_DATETIME("America/Bogota")   		                                              AS FECHA_CARGUE_BQ
FROM `amrl-data-prd.RAW.FUSION_EGO_ITEM_EFF_B` AS EIEB
LEFT JOIN `amrl-data-prd.RAW.FUSION_EGP_SYSTEM_ITEMS_B` AS ESIB ON EIEB.INVENTORY_ITEM_ID = ESIB.ITEMBASEPEOINVENTORYITEMID

--Obtiene el Encargo Fiduciario
LEFT JOIN (
  SELECT
  INVENTORY_ITEM_ID,
  ARRAY_AGG(ATTRIBUTE_CHAR1 ORDER BY ATTRIBUTE_CHAR1 DESC) AS ENCARGOS_FIDUCIARIOS_CONCATENADOS
  FROM `RAW.FUSION_EGO_ITEM_EFF_B` 
  WHERE CONTEXT_CODE = 'Encargos Fiduciarios'
  GROUP BY INVENTORY_ITEM_ID
) AS T2 ON EIEB.INVENTORY_ITEM_ID = T2.INVENTORY_ITEM_ID
WHERE LOWER(EIEB.CONTEXT_CODE) = 'inmuebles' 

),

 OPORTUNIDADES_ACTIVAS AS (
SELECT
EIEB.INVENTORY_ITEM_ID AS BK_ARTICULO,
EIEB.EFF_LINE_ID AS SK_ARTICULO,
--ARRAY_AGG(MR.REVENUEOPTYID ORDER BY MR.REVENUECREATIONDATE DESC)[OFFSET(0)] AS SK_OP_ACTUAL
MR.REVENUEOPTYID SK_OP_ACTUAL,
FROM `amrl-data-prd.RAW.FUSION_EGO_ITEM_EFF_B` AS EIEB
LEFT JOIN  `RAW.FUSION_MOO_REVN` MR ON EIEB.INVENTORY_ITEM_ID  = MR.REVENUEINVENTORYITEMID
LEFT JOIN `RAW.FUSION_MOO_OPTY` AS MO ON MO.OPTYID = MR.REVENUEOPTYID
LEFT JOIN `RAW.FUSION_MOO_STG_TL` AS MST ON MO.CURRSTGID = MST.STGID 
WHERE LOWER(EIEB.CONTEXT_CODE) = 'inmuebles'
AND MO.EXTNATTRIBUTECHAR016 = 'N'
AND MST.LANGUAGE = 'E'
AND MO.NAME NOT LIKE 'CDA%'
AND mst.name NOT IN ('0. Transición', '1. Visita')
--GROUP BY EIEB.INVENTORY_ITEM_ID 
),

OPORTUNIDAD_ACTIVA_INVENTARIO AS (
SELECT DISTINCT
OA.BK_ARTICULO,
ARRAY_AGG(SK_OP ORDER BY FECHA_DE_CREACION_OP DESC)[OFFSET(0)] AS SK_OP_ACTUAL
 FROM  OPORTUNIDADES_ACTIVAS OA
 INNER JOIN `PRESENTATION.FACT_OPORTUNIDAD` AS FA ON SK_OP_ACTUAL = SK_OP AND SK_ARTICULO = FA.BK_ARTICULO
 GROUP BY OA.BK_ARTICULO
),

OPORTUNIDADES_DESISTIDAS AS (
SELECT
EIEB.INVENTORY_ITEM_ID  AS BK_ARTICULO,
EIEB.EFF_LINE_ID AS SK_ARTICULO,
MO.OPTYID,
--ARRAY_AGG(MO.OPTYID ORDER BY MO.EXTNATTRIBUTETIMESTAMP005 DESC )[OFFSET(0)] AS SK_OP_DESISTIDA,
--COUNT(DISTINCT MO.OPTYID)AS TOTAL_DESISTIMIENTOS,
--ARRAY_AGG(MO.EXTNATTRIBUTETIMESTAMP005 ORDER BY MO.EXTNATTRIBUTETIMESTAMP005 DESC )[OFFSET(0)] AS FECHA_ULTIMO_DESISTIMIENTO,
FROM `amrl-data-prd.RAW.FUSION_EGO_ITEM_EFF_B` AS EIEB
LEFT JOIN  `RAW.FUSION_MOO_REVN` MR ON EIEB.INVENTORY_ITEM_ID  = MR.REVENUEINVENTORYITEMID
LEFT JOIN `RAW.FUSION_MOO_OPTY` AS MO ON MO.OPTYID = MR.REVENUEOPTYID
LEFT JOIN `RAW.FUSION_MOO_STG_TL` AS MST ON MO.CURRSTGID = MST.STGID
WHERE LOWER(EIEB.CONTEXT_CODE) = 'inmuebles'
AND MO.EXTNATTRIBUTECHAR016 = 'Y'
AND MST.LANGUAGE = 'E'
AND MO.NAME NOT LIKE 'CDA%'
AND mst.name NOT IN ('0. Transición', '1. Visita')
--GROUP BY EIEB.INVENTORY_ITEM_ID 
),


ULTIMA_OPORTUNIDAD_DESISTIDA AS 
(
SELECT 
OD.BK_ARTICULO,
ARRAY_AGG(FA.SK_OP ORDER BY FA.FECHA_DESISTIDO DESC )[OFFSET(0)] AS SK_OP_DESISTIDA,
COUNT(DISTINCT FA.SK_OP)AS TOTAL_DESISTIMIENTOS,
ARRAY_AGG(FA.FECHA_DESISTIDO ORDER BY FA.FECHA_DESISTIDO DESC )[OFFSET(0)] AS FECHA_ULTIMO_DESISTIMIENTO,

FROM OPORTUNIDADES_DESISTIDAS OD
INNER JOIN `PRESENTATION.FACT_OPORTUNIDAD` AS FA ON OD.OPTYID = FA.SK_OP AND SK_ARTICULO = FA.BK_ARTICULO
GROUP BY OD.BK_ARTICULO
),


TOTAL_OPORTUNIDADES_POR_ARTICULO AS 
(
SELECT
EIEB.INVENTORY_ITEM_ID  AS BK_ARTICULO,
ARRAY_AGG(MR.REVENUEOPTYID ORDER BY MR.REVENUECREATIONDATE DESC)[OFFSET(0)] AS SK_OP_ACTUAL,
COUNT(DISTINCT MO.OPTYID)AS TOTAL_OPORTUNIDADES_INMUEBLE,
FROM `amrl-data-prd.RAW.FUSION_EGO_ITEM_EFF_B` AS EIEB
LEFT JOIN  `RAW.FUSION_MOO_REVN` MR ON EIEB.INVENTORY_ITEM_ID  = MR.REVENUEINVENTORYITEMID
LEFT JOIN `RAW.FUSION_MOO_OPTY` AS MO ON MO.OPTYID = MR.REVENUEOPTYID
LEFT JOIN `RAW.FUSION_MOO_STG_TL` AS MST ON MO.CURRSTGID = MST.STGID 
WHERE LOWER(EIEB.CONTEXT_CODE) = 'inmuebles'
AND MST.LANGUAGE = 'E'
AND MO.NAME NOT LIKE 'CDA%'
AND mst.name NOT IN ('0. Transición', '1. Visita')
GROUP BY EIEB.INVENTORY_ITEM_ID 
),


OPORTUNIDAD_SELECCIONADA AS (
SELECT
COALESCE(OAI.BK_ARTICULO, UOD.BK_ARTICULO) AS BK_ARTICULO,
OAI.SK_OP_ACTUAL,
UOD.SK_OP_DESISTIDA,
UOD.TOTAL_DESISTIMIENTOS,
UOD.FECHA_ULTIMO_DESISTIMIENTO,
COALESCE(OAI.SK_OP_ACTUAL, UOD.SK_OP_DESISTIDA) AS SK_OP_SELECCIONADA
FROM `PRESENTATION.DIM_INMUEBLES` IB
LEFT JOIN OPORTUNIDAD_ACTIVA_INVENTARIO OAI ON IB.BK_ARTICULO = OAI.BK_ARTICULO
LEFT JOIN ULTIMA_OPORTUNIDAD_DESISTIDA UOD ON IB.BK_ARTICULO = UOD.BK_ARTICULO
),


COMPRADOR_2 AS
(
SELECT
BK_ARTICULO,
OPTYID,
PERPARTYID AS BK_COMPRADOR_2
FROM (
  SELECT
  OS.BK_ARTICULO,
  MOC.OPTYID,
  MOC.PERPARTYID,
  ROW_NUMBER() OVER (PARTITION BY MOC.OPTYID ORDER BY MOC.EXTNATTRIBUTENUMBER004 DESC, MOC.PERPARTYID ) AS RN
  FROM OPORTUNIDAD_SELECCIONADA OS
  LEFT JOIN `RAW.FUSION_MOO_OPTY_CON` MOC ON OS.SK_OP_SELECCIONADA = MOC.OPTYID
  LEFT JOIN `PRESENTATION.FACT_OPORTUNIDAD` FO ON FO.SK_OP = MOC.OPTYID
  WHERE MOC.PERPARTYID IS NOT NULL
  AND MOC.PERPARTYID != FO.BK_PERSONA
) FILTRADO
WHERE RN = 1

),


ESTADO_CUENTA_AGREGADO AS (
SELECT
  BK_NUMERO_OP,
-- CUOTA INICIAL (agrupación de conceptos previos a escrituración)
SUM(CASE 
  WHEN CONCEPTO LIKE 'CUOTA %' OR CONCEPTO = 'SEPARACION' OR CONCEPTO = 'ULTIMA CUOTA'
    OR CONCEPTO = 'CONFIRMACION' OR CONCEPTO LIKE 'CESANTIAS %'
    OR CONCEPTO LIKE 'SUBSIDIO %' OR CONCEPTO LIKE 'AHORRO PROGRAMAD %'
    OR CONCEPTO LIKE 'AHORRO PROGRAMADO %' OR CONCEPTO LIKE 'CUENTA AFC %'
    OR CONCEPTO LIKE 'PENS VOLUNT%' THEN VALOR_PACTADO
  ELSE 0 END) AS TOTAL_CUOTA_INICIAL,
-- TOTAL PAGADO
SUM(PAGO_REALIZADO) AS TOTAL_PAGADO,
-- VALOR EN MORA
SUM(CASE WHEN ESTADO_CARTERA <> 'AL DÍA' THEN VALOR_EN_MORA ELSE 0 END) AS VALOR_EN_MORA,
-- ANTIGUEDAD MORA
MAX(CASE WHEN ESTADO_CARTERA <> 'AL DÍA' THEN CANTIDAD_DIAS_EN_MORA END) AS CANTIDAD_DIAS_EN_MORA,
MAX(CASE WHEN ESTADO_CARTERA <> 'AL DÍA' THEN ESTADO_CARTERA END) AS ANTIGUEDAD_MORA,
-- CANTIDAD DE CUOTAS (cuotas y separación)
COUNT(CASE WHEN CONCEPTO LIKE 'CUOTA %' OR CONCEPTO = 'ULTIMA CUOTA' THEN 1 END) AS CANTIDAD_DE_CUOTAS,
SUM(CASE WHEN CONCEPTO LIKE 'CUOTA %' OR CONCEPTO = 'ULTIMA CUOTA' THEN VALOR_PACTADO END) AS MONTO_TOTAL_CUOTAS,
-- PAGOS INDIVIDUALES
MAX(CASE WHEN CONCEPTO = 'SEPARACION' THEN PAGO_REALIZADO END) AS SEPARACION,
MAX(CASE WHEN CONCEPTO = 'CONFIRMACION' THEN PAGO_REALIZADO END) AS CONFIRMACION,
-- COMPONENTES ESPECÍFICOS DE CUOTA INICIAL
SUM(CASE WHEN CONCEPTO LIKE 'CESANTIAS 1%' OR CONCEPTO LIKE 'CESANTIAS 2%' THEN VALOR_PACTADO END) AS CESANTIAS,
SUM(CASE WHEN CONCEPTO LIKE 'AFC 1%' OR CONCEPTO LIKE 'AFC 2%' THEN VALOR_PACTADO END) AS AFC,
SUM(CASE WHEN CONCEPTO LIKE 'AHORRO PROGRAMAD%' THEN VALOR_PACTADO END) AS AHORRO_PROGRAMADO,
SUM(CASE WHEN CONCEPTO LIKE 'SUBSIDIO %' THEN VALOR_PACTADO END) AS SUBSIDIO,
-- CRÉDITOS
SUM(CASE WHEN CONCEPTO LIKE 'CREDITO%' THEN VALOR_PACTADO END) AS CREDITO_TOTAL,
SUM(CASE WHEN CONCEPTO LIKE 'CREDITO' THEN VALOR_PACTADO END) AS MONTO_CREDITO,
MAX(CASE WHEN CONCEPTO LIKE 'CREDITO' THEN ENTIDAD_FINANCIERA END) AS ENTIDAD_CREDITO,
SUM(CASE WHEN CONCEPTO LIKE 'CREDITO TERCERO 1' THEN VALOR_PACTADO END) AS MONTO_CREDITO_TER1,
MAX(CASE WHEN CONCEPTO LIKE 'CREDITO TERCERO 1' THEN ENTIDAD_FINANCIERA END) AS ENTIDAD_CREDITO_TER1,
SUM(CASE WHEN CONCEPTO LIKE 'CREDITO TERCERO 2' THEN VALOR_PACTADO END) AS MONTO_CREDITO_TER2,
MAX(CASE WHEN CONCEPTO LIKE 'CREDITO TERCERO 2' THEN ENTIDAD_FINANCIERA END) AS ENTIDAD_CREDITO_TER2,
-- ENTIDADES SUBSIDIO
MAX(CASE WHEN CONCEPTO LIKE 'SUBSIDIO 1' THEN ENTIDAD_FINANCIERA END) AS ENTIDAD_SUBSIDIO1,
MAX(CASE WHEN CONCEPTO LIKE 'SUBSIDIO 2' THEN ENTIDAD_FINANCIERA END) AS ENTIDAD_SUBSIDIO2
FROM `PRESENTATION.FACT_ESTADO_CUENTA`
GROUP BY BK_NUMERO_OP
)


SELECT DISTINCT
IB.SK_ARTICULO,
IB.BK_ARTICULO,
IB.ENCARGOS_FIDUCIARIOS,
IB.ENCARGO_FIDUCIARIO_ACTUAL,
IB.TOTAL_ENCARGOS_ASIGNADOS,
IB.NOMBRE_ARTICULO,
IB.CATEGORIA,
IB.ESTADO_DEL_ARTICULO,
IB.REFERENCIA,
FO.INMUEBLE_PRINCIPAL,
--OS.SK_OP_SELECCIONADA,
FO.BK_NUMERO_OP AS OPORTUNIDAD,
SAFE.REGEXP_EXTRACT(IB.REFERENCIA, r'^([^\\-]+)') AS TORRE,
SAFE.REGEXP_EXTRACT(IB.REFERENCIA, r'^[^-]+-([^-]+)') AS APTO,
DP.SALA_DE_VENTAS,
DP.SALA_DE_VENTAS_ALTERNATIVA,
DP.MACROCONSOLIDADOR AS PROYECTO,
DP.TRANSACCIONAL AS ETAPA,
DP.TIPO_DE_PROYECTO,
DP.DIRECTOR_DE_VENTAS_VIVIENDAS_SUBETAPA AS DIRECTOR_DE_VENTAS,
DP.CIUDAD,
IB.CLASE_DE_ARTICULO,
IB.AREA_CONSTRUIDA,
IB.AREA_COMUN,
COALESCE(DP.TOTAL_VIVIENDAS_MACROPROYECTO,0) AS TOTAL_VIVIENDAS_MACROPROYECTO,  --REVISAR
COALESCE(DP.TOTAL_COMERCIOS_MACROPROYECTO,0) AS TOTAL_COMERCIOS_MACROPROYECTO, --REVISAR
COALESCE(DP.TOTAL_VIVIENDAS_SUBETAPA,0) AS TOTAL_VIVIENDAS_SUBETAPA,
COALESCE(DP.TOTAL_COMERCIOS_SUBETAPA,0) AS TOTAL_COMERCIOS_SUBETAPA,
COALESCE(DP.RITMO_VENTAS_TRANSACCIONAL,0) AS RITMO_VENTAS_TRANSACCIONAL,
DP.FECHA_PUNTO_DE_EQUILIBRIO AS FECHA_PUNTO_DE_EQUILIBRIO_SUBETAPA,
CASE  WHEN DP.TIPO_DE_PROYECTO LIKE '%MAYOR A VIS%' THEN DP.TOTAL_VIVIENDAS_SUBETAPA * 0.6
      WHEN DP.TIPO_DE_PROYECTO = 'EMPRESARIAL' THEN DP.TOTAL_VIVIENDAS_SUBETAPA * 0.6
      ELSE DP.TOTAL_VIVIENDAS_SUBETAPA * 0.6 END AS PUNTO_EQUILIBRIO_SUBETAPA,
DP.BANCO_CONSTRUCTOR,
FO.IMPORTE_TOTAL_OP,
FO.FECHA_DE_SEPARACION,
FO.FECHA_DE_SEPARACION_AJUSTADA,
FO.DESISTIDO,
FO.FECHA_DESISTIDO,
CASE WHEN FO.DESISTIDO = 'Y' THEN FO.IMPORTE_TOTAL_OP_PRIMERA_VERSION ELSE 0 END AS PRECIO_DESISTIMIENTO,
COALESCE(OS.TOTAL_DESISTIMIENTOS,0) AS TOTAL_DESISTIMIENTOS,
FO.ETAPA_DE_VENTA,
UPPER(DM2.NOMBRE_COMPLETO) AS VENDEDOR,
FO.OP_CREADA_POR,

UPPER(DM.NOMBRE_COMPLETO) AS COMPRADOR1,
UPPER(DM.NUMERO_DE_IDENTIFICACION) AS IDENTIFICACION_COMPRADOR1,
DM.FECHA_DE_NACIMIENTO AS FECHA_DE_NACIMIENTO_COMPRADOR1,
UPPER(DM.PAIS_DE_RESIDENCIA)  AS PAIS_COMPRADOR1,
UPPER(DM.CIUDAD_DE_RESIDENCIA) AS CIUDAD_COMPRADOR1,
UPPER(DM.DIRECCION_RESIDENCIA) AS DIRECCION_COMPRADOR1,
UPPER(DM.EMAIL) AS EMAIL_COMPRADOR1,
UPPER(DM.TELEFONO) AS TELEFONO_COMPRADOR1,
UPPER(DM.OCUPACION) AS OCUPACION_COMPRADOR1,
UPPER(DM3.NOMBRE_COMPLETO) AS COMPRADOR2,
UPPER(DM3.NUMERO_DE_IDENTIFICACION) AS IDENTIFICACION_COMPRADOR2,
DM3.FECHA_DE_NACIMIENTO AS FECHA_DE_NACIMIENTO_COMPRADOR2,
UPPER(DM3.PAIS_DE_RESIDENCIA)  AS PAIS_COMPRADOR2,
UPPER(DM3.CIUDAD_DE_RESIDENCIA) AS CIUDAD_COMPRADOR2,
UPPER(DM3.DIRECCION_RESIDENCIA) AS DIRECCION_COMPRADOR2,
UPPER(DM3.EMAIL) AS EMAIL_COMPRADOR2,
UPPER(DM3.TELEFONO) AS TELEFONO_COMPRADOR2,
UPPER(DM3.OCUPACION) AS OCUPACION_COMPRADOR2,


ECA.TOTAL_CUOTA_INICIAL,
ECA.TOTAL_PAGADO,
ECA.VALOR_EN_MORA,
ECA.CANTIDAD_DIAS_EN_MORA,
ECA.ANTIGUEDAD_MORA,
ECA.CANTIDAD_DE_CUOTAS,
ECA.MONTO_TOTAL_CUOTAS,
ECA.SEPARACION,
ECA.CONFIRMACION,
ECA.CESANTIAS,
ECA.AFC,
ECA.AHORRO_PROGRAMADO,
ECA.SUBSIDIO,
ECA.ENTIDAD_SUBSIDIO1,
ECA.ENTIDAD_SUBSIDIO2,
ECA.MONTO_CREDITO,
ECA.ENTIDAD_CREDITO,
ECA.MONTO_CREDITO_TER1,
ECA.ENTIDAD_CREDITO_TER1,
ECA.MONTO_CREDITO_TER2,
ECA.ENTIDAD_CREDITO_TER2,
ECA.CREDITO_TOTAL,


IB.MATRICULA_INMOBILIARIA,
IB.FECHA_PROYECTADA_ESCRITURACION,
IB.FECHA_PROYECTADA_CTO,
IB.FECHA_REAL_CTO,
IB.FECHA_PROYECTADA_POLIZA_DECENAL,
IB.FECHA_REAL_POLIZA_DECENAL,
DP.FECHA_PROYECTADA_RPH,
DP.FECHA_REAL_RPH,
VDPT.RVDF AS FECHA_VINCULACION,
VDPT.BSTR AS FECHA_PRIMER_BLOQUEO,
CASE WHEN ECA.SUBSIDIO IS NULL THEN 0
     WHEN (ENTIDAD_SUBSIDIO1 NOT LIKE 'CAJA DE COMPENSACION FAMILIAR%' AND ENTIDAD_SUBSIDIO1 NOT LIKE '%VIVIENDA FONVIVIENDA%') THEN 1
     WHEN (ENTIDAD_SUBSIDIO2 NOT LIKE 'CAJA DE COMPENSACION FAMILIAR%' AND ENTIDAD_SUBSIDIO2 NOT LIKE '%VIVIENDA FONVIVIENDA%') THEN 1
     ELSE 0 END AS OTRO_SUBSIDIO,
CASE WHEN (ENTIDAD_SUBSIDIO1 LIKE '%CAJA DE COMPENSACION FAMILIAR%' OR ENTIDAD_SUBSIDIO2 LIKE '%CAJA DE COMPENSACION FAMILIAR%') THEN 1 ELSE 0 END AS TIENE_SUBSIDIO_CAJA,
CASE WHEN (ENTIDAD_SUBSIDIO1 LIKE '%VIVIENDA FONVIVIENDA%' OR ENTIDAD_SUBSIDIO2 LIKE '%VIVIENDA FONVIVIENDA%') THEN 1 ELSE 0 END AS TIENE_MI_CASA_YA,
--PENDIENTE COLUMNA HABILITADO TT
CASE WHEN ESTADO_DEL_ARTICULO = 'Vendido' THEN 1 ELSE 0 END VENDIDO,
CASE WHEN FO.BLOQUEO = 'Y' THEN 1 ELSE 0 END AS BLOQUEADO,
CASE WHEN VDPT.RVDF IS NOT NULL THEN 1 ELSE 0 END AS VINCULADO,
CASE WHEN VDPT.LLPT IS NOT NULL THEN 1 ELSE 0 END AS PROMETIDO,
CASE WHEN IB.FECHA_PROYECTADA_POLIZA_DECENAL IS NOT NULL THEN 1 ELSE 0 END TIENE_POLIZA_DECENAL,
CASE WHEN DP.FECHA_REAL_RPH IS NOT NULL THEN 1 ELSE 0 END TIENE_RPH,
CASE WHEN IB.FECHA_REAL_CTO IS NOT NULL THEN 1 ELSE 0 END TIENE_CTO,


CASE WHEN VDPT.FESC IS NOT NULL THEN 1 ELSE 0 END AS ESCRITURADO,
CASE WHEN VDPT.EIRE IS NOT NULL THEN 1 ELSE 0 END AS ENTREGADO,
CASE WHEN VDPT.EPP5 IS NOT NULL THEN 1 ELSE 0 END AS PACTADO_ESCRITURA,
VDPT.FESC AS FECHA_ESCRITURACION,
VDPT.EIRE AS FECHA_ENTREGA,
IB.PRECIO_DE_LISTA,

DATE_DIFF(DATE(DP.FECHA_MAXIMA_CUOTA_INICIAL), CURRENT_DATE(), MONTH) AS PLAZO_CUOTA_INICIAL_MESES,
DATE_DIFF(DATE(DP.FECHA_MAXIMA_CUOTA_INICIAL), CURRENT_DATE(), DAY) AS PLAZO_CUOTA_INICIAL_DIAS,


IB.TIPO_DE_ARTICULO,
DP.FECHA_MAXIMA_CUOTA_INICIAL,

OS.FECHA_ULTIMO_DESISTIMIENTO,

CASE  WHEN EXTRACT(YEAR FROM OS.FECHA_ULTIMO_DESISTIMIENTO) = EXTRACT(YEAR FROM CURRENT_DATE()) AND EXTRACT(MONTH FROM OS.FECHA_ULTIMO_DESISTIMIENTO) = EXTRACT(MONTH FROM CURRENT_DATE()) THEN 1  ELSE 0 END AS DESISTIDO_ESTE_MES,

CASE  WHEN EXTRACT(YEAR FROM FO.FECHA_DE_SEPARACION_AJUSTADA) = EXTRACT(YEAR FROM CURRENT_DATE()) AND EXTRACT(MONTH FROM FO.FECHA_DE_SEPARACION_AJUSTADA) = EXTRACT(MONTH FROM CURRENT_DATE()) THEN 1  ELSE 0 END AS VENDIDO_ESTE_MES,

TOA.TOTAL_OPORTUNIDADES_INMUEBLE,

VDPT.LLPT AS FECHA_PROMESA,
UPPER(FORMAT_DATE('%B', LLPT,"America/Bogota")) AS MES_PROMESA,
VDPT.EPP5,
UPPER(FORMAT_DATE('%B', EPP5,"America/Bogota")) AS MES_EPP5,
VDPT.AFEC AS AFEC,
CASE WHEN VDPT.AFEC IS NOT NULL THEN 1 ELSE 0 END AS AGENDADO_ESCRITURACION,
VDPT.VCAV,
CASE WHEN VDPT.VCAV IS NOT NULL THEN 1 ELSE 0 END AS VENCIMIENTO_APROBACION_CLIENTE,
CASE WHEN DATE(VDPT.VCAV) >= CURRENT_DATE()  THEN 1 ELSE 0 END AS ESTADO_CARTA_CREDITO,

CASE WHEN ESTADO_DEL_ARTICULO = 'Vendido' AND VDPT.FESC IS NOT NULL THEN 'D. ESCRITURADO'
     WHEN ESTADO_DEL_ARTICULO = 'Vendido' AND VDPT.LLPT IS NOT NULL THEN 'C. VENDIDO PROMETIDO'
     WHEN ESTADO_DEL_ARTICULO = 'Vendido' AND VDPT.LLPT IS NULL THEN 'B. VENDIDO NO PROMETIDO'
     WHEN ESTADO_DEL_ARTICULO != 'Vendido' THEN 'A. NO VENDIDO'
     ELSE 'A. NO VENDIDO' END AS  CLASIFICACION,


FROM INVENTARIO_BASE IB
LEFT JOIN `PRESENTATION.DIM_PROYECTO` DP ON IB.BK_COD_TRANSACCIONAL = DP.SK_COD_TRANSACCIONAL
LEFT JOIN OPORTUNIDAD_SELECCIONADA OS ON IB.BK_ARTICULO = OS.BK_ARTICULO
LEFT JOIN `PRESENTATION.FACT_OPORTUNIDAD` AS FO ON FO.SK_OP = OS.SK_OP_SELECCIONADA --AND FO.BK_ARTICULO = IB.SK_ARTICULO
LEFT JOIN `PRESENTATION.DIM_PERSONA` AS DM ON FO.BK_PERSONA = DM.BK_PERSONA
LEFT JOIN `PRESENTATION.DIM_PERSONA` AS DM2 ON FO.BK_VENDEDOR = DM2.BK_PERSONA
LEFT JOIN COMPRADOR_2 C2 ON C2.BK_ARTICULO = IB.BK_ARTICULO
LEFT JOIN `PRESENTATION.DIM_PERSONA` AS DM3 ON C2.BK_COMPRADOR_2 = DM3.BK_PERSONA
LEFT JOIN ESTADO_CUENTA_AGREGADO AS ECA ON ECA.BK_NUMERO_OP = FO.BK_NUMERO_OP
LEFT JOIN `PRESENTATION.VW_PIVOT_DimTramites` VDPT ON FO.SK_OP = VDPT.BK_OP
LEFT JOIN TOTAL_OPORTUNIDADES_POR_ARTICULO TOA ON IB.BK_ARTICULO = TOA.BK_ARTICULO

--WHERE IB.NOMBRE_ARTICULO IN ('CJVT22277-7-502-1', 'PRNV23138-5-103-1')
--ORDER BY SK_ARTICULO

       ;
        --where NOMBRE_ARTICULO = 'CJMC23136-1-2804-1';    
END;