CREATE PROCEDURE `amrl-data-prd`.MONITORING.SP_TBL_MONITOREO_TABLAS()
OPTIONS(
  description="Propósito: Crear y Actualizar la tabla de metadatos TBL_MONITOREO_TABLAS. Este procedimiento automatiza la consolidación de la información de BigQuery a nivel de proyecto/región para todas las tablas y vista Autor: Anderson Murte\n\nUsos: Dashboard Diccionario de Datos\n")
BEGIN

CREATE OR REPLACE TABLE `amrl-data-prd.MONITORING.TBL_MONITOREO_TABLAS`
--PARTITION BY COLUMNA 1
CLUSTER BY DATASET, TABLA
OPTIONS ( description = ''' Tablas de MONITOREO para el esquema completo de BigQuery. Contiene metadatos a nivel de tabla para todos los datasets del proyecto. Incluye detalles sobre creación, almacenamiento (filas, estado, fecha), y configuración de particionamiento y clustering.   Incluye campos de auditoria, fuente de origen, modulo y submodulo de la fuente de datos. Diseñado para la gestión y exploración de datos del equipo de analítica. ''',
   labels = [('tipo', 'gobierno_datos'),('estado', 'activo')] 
) AS 

WITH DETALLE_TABLAS AS 
(
SELECT 
SK_DETALLE_TABLA,
DATASET,
TABLA,
STRING_AGG(DISTINCT ORIGEN_RAW, ', ' ORDER BY ORIGEN_RAW DESC) AS ORIGEN,
STRING_AGG(DISTINCT MODULO_RAW, ', ' ORDER BY MODULO_RAW DESC )AS MODULO,
STRING_AGG(DISTINCT SUBMODULO_RAW, ', ' ORDER BY SUBMODULO_RAW DESC ) AS SUBMODULO,
ARRAY_AGG(FECHA_ULTIMA_MODIFICACION_RAW ORDER BY FECHA_ULTIMA_MODIFICACION_RAW ASC) [OFFSET(0)] AS ULTIMA_FECHA_ACTUALIZACION_MODELO
FROM `MONITORING.TBL_DETALLE_LINAJE_ESQUEMAS` 
GROUP BY
SK_DETALLE_TABLA,
DATASET,
TABLA
),

FECHA_CORTE_CONSUMO AS 
(
SELECT
SK_DETALLE_TABLA,
DATASET,
TABLA,
ARRAY_AGG(FECHA_ULTIMA_MODIFICACION_RAW ORDER BY FECHA_ULTIMA_MODIFICACION_RAW ASC) [OFFSET(0)] AS ULTIMA_FECHA_ACTUALIZACION_MODELO
FROM `MONITORING.TBL_DETALLE_LINAJE_ESQUEMAS`
WHERE CRITICIDAD = 'ALTA'
GROUP BY
SK_DETALLE_TABLA,
DATASET,
TABLA
)

SELECT
SHA256 ( CONCAT (TDE.DATASET, TDE.TABLA)) AS SK_DETALLE_TABLA,
TO_HEX (SHA256 ( CONCAT (TDE.DATASET, TDE.TABLA))) AS SK_DETALLE_TABLA_STRING,
TDE.PROYECTO,
TDE.DATASET,
TDE.TABLA,
TDE.TIPO_TABLA,
TDE.FECHA_CREACION,
COALESCE(TADC.CREADO_POR,TADM.ACTUALIZADO_POR) AS CREADO_POR,
COALESCE(TDE.FECHA_ULTIMA_MODIFICACION, TADM.FECHA_ULTIMA_MODIFICACION) AS FECHA_ULTIMA_MODIFICACION,
TADM.ACTUALIZADO_POR,
TDE.ACTUALIZADA,

COALESCE(TBO.ORIGEN, DT.ORIGEN) AS ORIGEN,
COALESCE(TRTM.MODULO,DT.MODULO) AS MODULO,
COALESCE(TRTM.SUBMODULO, DT.SUBMODULO) AS SUBMODULO,
TDE.ES_INSERTABLE,
TDE.ES_TIPADA,
TDE.TOTAL_FILAS,
TDE.TOTAL_COLUMNAS,
TDE.ALMACENAMIENTO_TABLA,
TDE.ESTADO_ALMACENAMIENTO,
TDE.ES_PARTICIONADA,
TDE.COLUMNAS_PARTICIONADAS,
TDE.CLUSTER_1,
TDE.CLUSTER_2,
TDE.CLUSTER_3,
TDE.CLUSTER_4,

TDO.ESTADO,
--TDO.TIPOTABLA,
TDO.DESCRIPCION,

FCC.ULTIMA_FECHA_ACTUALIZACION_MODELO,
TIMESTAMP(DATETIME(FCC.ULTIMA_FECHA_ACTUALIZACION_MODELO, "America/Bogota")) AS ULTIMA_FECHA_ACTUALIZACION_MODELO_UTC,

CURRENT_TIMESTAMP() AS FECHA_EJECUCION

FROM `MONITORING.TBL_DETALLE_ESQUEMAS` AS TDE
LEFT JOIN `MONITORING.TBL_ORIGENES` AS TBO ON TDE.BK_ORIGEN = TBO.SK_ORIGEN
LEFT JOIN `MONITORING.TBL_RELACION_TABLAS_MODULOS` AS TRTM ON TDE.BK_MODULO_SUBMODULO = TRTM.SK_MODULO_SUBMODULO
LEFT JOIN `MONITORING.TBL_DETALLE_OPCIONES` AS TDO ON TDE.SK_DETALLE_TABLA = TDO.SK_DETALLE_TABLA

LEFT JOIN `MONITORING.TBL_AUDITLOG_DETALLE_CREACIONES` TADC ON TDE.SK_DETALLE_TABLA = TADC.SK_DETALLE_TABLA
LEFT JOIN `MONITORING.TBL_AUDITLOG_DETALLE_MODIFICACIONES` TADM ON TDE.SK_DETALLE_TABLA = TADM.SK_DETALLE_TABLA

LEFT JOIN DETALLE_TABLAS AS DT ON DT.SK_DETALLE_TABLA = TDE.SK_DETALLE_TABLA
LEFT JOIN FECHA_CORTE_CONSUMO AS FCC ON FCC.SK_DETALLE_TABLA = TDE.SK_DETALLE_TABLA
;

END;